define(function(require,exports,module){"use strict";var DEBUG=false;function StateHandler(keymapping){this.keymapping=this.$buildKeymappingRegex(keymapping)}StateHandler.prototype={$buildKeymappingRegex:function(keymapping){for(var state in keymapping){this.$buildBindingsRegex(keymapping[state])}return keymapping},$buildBindingsRegex:function(bindings){bindings.forEach(function(binding){if(binding.key){binding.key=new RegExp("^"+binding.key+"$")}else if(Array.isArray(binding.regex)){if(!("key"in binding))binding.key=new RegExp("^"+binding.regex[1]+"$");binding.regex=new RegExp(binding.regex.join("")+"$")}else if(binding.regex){binding.regex=new RegExp(binding.regex+"$")}})},$composeBuffer:function(data,hashId,key,e){if(data.state==null||data.buffer==null){data.state="start";data.buffer=""}var keyArray=[];if(hashId&1)keyArray.push("ctrl");if(hashId&8)keyArray.push("command");if(hashId&2)keyArray.push("option");if(hashId&4)keyArray.push("shift");if(key)keyArray.push(key);var symbolicName=keyArray.join("-");var bufferToUse=data.buffer+symbolicName;if(hashId!=2){data.buffer=bufferToUse}var bufferObj={bufferToUse:bufferToUse,symbolicName:symbolicName};if(e){bufferObj.keyIdentifier=e.keyIdentifier}return bufferObj},$find:function(data,buffer,symbolicName,hashId,key,keyIdentifier){var result={};this.keymapping[data.state].some(function(binding){var match;if(binding.key&&!binding.key.test(symbolicName)){return false}if(binding.regex&&!(match=binding.regex.exec(buffer))){return false}if(binding.match&&!binding.match(buffer,hashId,key,symbolicName,keyIdentifier)){return false}if(binding.disallowMatches){for(var i=0;i<binding.disallowMatches.length;i++){if(!!match[binding.disallowMatches[i]]){return false}}}if(binding.exec){result.command=binding.exec;if(binding.params){var value;result.args={};binding.params.forEach(function(param){if(param.match!=null&&match!=null){value=match[param.match]||param.defaultValue}else{value=param.defaultValue}if(param.type==="number"){value=parseInt(value)}result.args[param.name]=value})}data.buffer=""}if(binding.then){data.state=binding.then;data.buffer=""}if(result.command==null){result.command="null"}if(DEBUG){console.log("KeyboardStateMapper#find",binding)}return true});if(result.command){return result}else{data.buffer="";return false}},handleKeyboard:function(data,hashId,key,keyCode,e){if(hashId==-1)hashId=0;if(hashId!=0&&(key==""||key==String.fromCharCode(0))){return null}var r=this.$composeBuffer(data,hashId,key,e);var buffer=r.bufferToUse;var symbolicName=r.symbolicName;var keyId=r.keyIdentifier;r=this.$find(data,buffer,symbolicName,hashId,key,keyId);if(DEBUG){console.log("KeyboardStateMapper#match",buffer,symbolicName,r)}return r}};exports.matchCharacterOnly=function(buffer,hashId,key,symbolicName){if(hashId==0){return true}else if(hashId==4&&key.length==1){return true}else{return false}};exports.StateHandler=StateHandler});