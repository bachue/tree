if(typeof process!=="undefined"){require("amd-loader")}define(function(require,exports,module){"use strict";var EditSession=require("./edit_session").EditSession;var JavaScriptMode=require("./mode/javascript").Mode;var Range=require("./range").Range;var assert=require("./test/assertions");function forceTokenize(session){for(var i=0,l=session.getLength();i<l;i++)session.getTokens(i)}function testStates(session,states){for(var i=0,l=session.getLength();i<l;i++)assert.equal(session.bgTokenizer.states[i],states[i]);assert.ok(l==states.length)}module.exports={"test background tokenizer update on session change":function(){var doc=new EditSession(["/*","*/","var juhu"]);doc.setMode("./mode/javascript");forceTokenize(doc);testStates(doc,["comment_regex_allowed","start","no_regex"]);doc.remove(new Range(0,2,1,2));testStates(doc,[null,"no_regex"]);forceTokenize(doc);testStates(doc,["comment_regex_allowed","comment_regex_allowed"]);doc.insert({row:0,column:2},"\n*/");testStates(doc,[undefined,undefined,"comment_regex_allowed"]);forceTokenize(doc);testStates(doc,["comment_regex_allowed","start","no_regex"])}}});if(typeof module!=="undefined"&&module===require.main){require("asyncjs").test.testcase(module.exports).exec()}